{% for username in workshop_users|json_query("[].username") %}
- apiVersion: tekton.dev/v1alpha1
  kind: Pipeline
  metadata:
    name: build-test-deploy-app-to-dev
    namespace: {{ username }}-cicd
  spec:
    resources:
    - name: app-git
      type: git
    tasks:
    - name: build-app
      taskRef:
        kind: Task
        name: maven-java8
      params:
      - name: GOALS
        value:
        - install
        - '-f$(inputs.resources.source.path)/pom.xml'
        - '-DskipTests=true'
        - '-Dmaven.repo.local=$(workspaces.maven-repo.path)'
      resources:
        inputs:
        - name: source
          resource: app-git
      workspaces:
      - name: maven-repo
        workspace: local-maven-repo
    - name: oscap-scan-image
      taskRef:
        kind: Task
        name: oscap-image-scan
      params:
      - name: xccdfProfile
        value: xccdf_org.ssgproject.content_profile_standard
      - name: oscapProfilePath
        value: /usr/share/xml/scap/ssg/content/ssg-centos7-ds-1.2.xml
      - name: container-imagetag
        value: "latest"
      - name: container-image-url
        value: "quay.io/mbach/rstudio-centos7" #TODO - set the built mvn image name here?
      workspaces:
      - name: report
        workspace: report #TODO - Check workspace is created
    - name: run-unit-tests
      taskRef:
        kind: Task
        name: maven-java8
      params:
      - name: GOALS
        value:
        - test
        - '-f$(inputs.resources.source.path)/pom.xml'
        - '-Dmaven.repo.local=$(workspaces.maven-repo.path)'
      resources:
        inputs:
        - name: source
          resource: app-git
      workspaces:
      - name: maven-repo
        workspace: local-maven-repo
      runAfter:
      - build-app
    - name: code-quality-analysis
      taskRef:
        kind: Task
        name: maven-java8
      params:
      - name: GOALS
        value:
        - package
        - 'sonar:sonar'
        - '-f$(inputs.resources.source.path)/pom.xml'
        - '-DskipTests=true'
        - '-Dsonar.host.url=http://sonarqube.devsecops.svc.cluster.local:9000'
        - '-Dmaven.repo.local=$(workspaces.maven-repo.path)'
      resources:
        inputs:
        - name: source
          resource: app-git
      workspaces:
      - name: maven-repo
        workspace: local-maven-repo
      runAfter:
      - build-app
    - name: archive-app-to-nexus
      taskRef:
        kind: Task
        name: maven-java8
      params:
      - name: GOALS
        value:
        - deploy
        - '-f$(inputs.resources.source.path)/pom.xml'
        - '-DskipTests=true'
        - '-Pnexus3'
        - '-Dmaven.repo.local=$(workspaces.maven-repo.path)'
      resources:
        inputs:
        - name: source
          resource: app-git
      workspaces:
      - name: maven-repo
        workspace: local-maven-repo
      runAfter:
      - run-unit-tests
      - code-quality-analysis
    - name: deploy-to-openshift
      taskRef:
        kind: Task
        name: deploy-jboss-app-to-dev
      params:
      - name: app_name
        value: tasks
      - name: artifact_path
        value: org/jboss/quickstarts/eap/jboss-tasks-rs/7.0.0-SNAPSHOT/jboss-tasks-rs-7.0.0-SNAPSHOT.war
      resources:
        inputs:
        - name: source
          resource: app-git
      workspaces:
      - name: maven-repo
        workspace: local-maven-repo
      runAfter:
      - archive-app-to-nexus
    workspaces:
    - name: local-maven-repo

- apiVersion: tekton.dev/v1alpha1
  kind: Pipeline
  metadata:
    name: deploy-app-to-stage
    namespace: {{ username }}-cicd
  spec:
    params:
    - default: ''
      description: App version to deploy
      name: app_version
      type: string
    tasks:
    - name: deploy-app-to-stage
      taskRef:
        kind: Task
        name: deploy-app-to-stage
      params:
      - name: app_name
        value: tasks
      - name: dev_project
        value: {{username}}-dev
      - name: stage_project
        value: {{username}}-stage
      - name: app_revision
        value: $(params.app_version)
{% endfor %}
