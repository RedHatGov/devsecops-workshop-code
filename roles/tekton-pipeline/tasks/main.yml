---
- name: Create registry secrets for every user account for registry.redhat.io
  k8s:
    kubeconfig: '{{ kubeconfig }}'
    definition: '{{ lookup("template", "registry_secrets.yml.j2")|from_yaml }}'

- name: Create registry secrets for every user account in Quay
  k8s:
    kubeconfig: '{{ kubeconfig }}'
    definition: '{{ lookup("template", "quay_secrets.yml.j2")|from_yaml }}'
  register: quay_secrets
  when: deploy_quay|default(true)

- name: Wait for pipeline accounts to exist
  k8s_info:
    kubeconfig: '{{ kubeconfig }}'
    api_version: v1
    kind: ServiceAccount
    namespace: '{{ item[0] }}-{{ item[1] }}'
    name: pipeline
  register: pipeline_accounts
  until: pipeline_accounts.resources|length > 0
  retries: 10
  delay: 30
  with_nested:
    - '{{ workshop_users|json_query("[].username") }}'
    - '{{ projects|json_query("[].name") }}'

# k8s_json_patch nor normal k8s modules are working here... oc CLI is
- name: Attach new secrets to pipeline service accounts
  shell: |
    export KUBECONFIG='{{ kubeconfig }}'
    oc='{{ oc_cli }}'
    admin_user='{{ workshop_admin.username }}'
    admin_password='{{ workshop_admin.password }}'
    if [ $($oc whoami) != "$admin_user" ]; then
        $oc login --insecure-skip-tls-verify=true -u "$admin_user" -p "$admin_password" || exit 1
    fi
    user={{ item[0] }}
    project={{ item[1] }}
    existing_secrets=$($oc get sa/pipeline -n $user-$project -o jsonpath='{.secrets[*].name}')
    if ! echo "$existing_secrets" | grep -qF "$user-$project-quay-reg"; then
      $oc patch sa/pipeline -n $user-$project --type=json -p='[
        {"op":"add",
          "path":"/secrets/-",
          "value":{"name":"'"$user-$project"'-quay-reg"}
        }
      ]' || exit 2
      echo changed
    else
      echo ok
    fi
  when:
    - quay_secrets is defined
    - quay_secrets.changed|bool
    - quay_secrets.result|json_query('results[*]|[?@.result.metadata.namespace == `' + item[0] + '-' + item[1] + '`].changed')|first|bool
  with_nested:
    - '{{ workshop_users|json_query("[].username") }}'
    - '{{ projects|json_query("[].name") }}'
  register: quay_pipeline_secrets
  changed_when: "'changed' in quay_pipeline_secrets.stdout_lines"

- name: Set up access to registry.redhat.io
  include_tasks: registry_service_accounts.yml
  loop: '{{ workshop_users|json_query("[].username") }}'
  loop_control:
    loop_var: username

- name: Create necessary pipeline tasks, and resources
  include_tasks: pipeline_resources.yml
  when: deploy_automated_build
