- name: Get UID for {{ user.username }}
  k8s_info:
    kubeconfig: '{{ kubeconfig }}'
    kind: User
    name: "{{ user.username }}"
  register: user_object

- name: Add {{ user.username }} to CRW
  uri:
    url: '{{ keycloak_url }}/auth/admin/realms/codeready/users'
    validate_certs: false
    method: POST
    return_content: true
    headers:
      Content-Type: application/json
      Authorization: "Bearer {{ codeready_sso_admin_token.json.access_token }}"
    body:
      username: "{{ user.username }}"
      enabled: true
      emailVerified: true
      firstName: "{{ user.username }}"
      lastName: Developer
      email: "{{ user.username }}@no-reply.com"
      credentials:
        - type: password
          value: "{{ user.password }}"
          temporary: false
      federatedIdentities:
        - identityProvider: openshift-v4
          userId: "{{ user_object.resources[0].metadata.uid }}"
          userName: "{{ user.username }}"
    body_format: json
    status_code: 201,409
  register: user_creation
  until:
    - user_creation.status is defined
    - not user_creation.failed
  changed_when: user_creation.status == 201
  retries: 10
  delay: 10

- name: Get {{ user.username }} OpenShift token
  community.kubernetes.k8s_auth:
    username: "{{ user.username }}"
    password: "{{ user.password }}"
    host: 'https://api.{{ full_cluster_name }}:6443'
    validate_certs: no
  register: k8s_auth_result

- set_fact:
    link_token: '{"access_token":"{{ k8s_auth_result.k8s_auth.api_key }}","expires_in":86400,"scope":"user:full","token_type":"Bearer"}'

- name: Link {{ user.username }} Keycloak and OCP accounts
  community.kubernetes.k8s_exec:
    kubeconfig: '{{ kubeconfig }}'
    namespace: "{{ crw_project_name }}"
    pod: '{{ postgres_pod_name }}'
    command: psql -d keycloak -c "UPDATE federated_identity SET token=$${{ link_token }}$$ WHERE federated_username=$${{ user.username }}$$;"
