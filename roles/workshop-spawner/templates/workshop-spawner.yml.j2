apiVersion: v1
items:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app: external-keycloak
      class: spawner
      spawner: external-keycloak
    name: external-keycloak-spawner
    namespace: {{ workshop_spawner_project_name }}
- apiVersion: authorization.openshift.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
      app: external-keycloak
      class: spawner
      spawner: external-keycloak
    name: external-keycloak-spawner-basic
    namespace: {{ workshop_spawner_project_name }}
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: admin
  subjects:
  - kind: ServiceAccount
    name: external-keycloak-spawner
    namespace: {{ workshop_spawner_project_name }}
- apiVersion: authorization.openshift.io/v1
  kind: ClusterRole
  metadata:
    labels:
      app: external-keycloak
      class: spawner
      spawner: external-keycloak
    name: external-keycloak-spawner-extra
  rules:
  - apiGroups:
    - ""
    - authorization.openshift.io
    - rbac.authorization.k8s.io
    resourceNames:
    - view
    - edit
    - admin
    resources:
    - clusterroles
    - roles
    verbs:
    - bind
  - apiGroups:
    - ""
    - authorization.openshift.io
    - rbac.authorization.k8s.io
    resources:
    - clusterroles
    - clusterrolebindings
    - rolebindings
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - limitranges
    - resourcequotas
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: authorization.openshift.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
      app: external-keycloak
      class: spawner
      spawner: external-keycloak
    name: external-keycloak-spawner-extra
  roleRef:
    name: external-keycloak-spawner-extra
  subjects:
  - kind: ServiceAccount
    name: external-keycloak-spawner
    namespace: {{ workshop_spawner_project_name }}
- apiVersion: authorization.openshift.io/v1
  kind: ClusterRole
  metadata:
    labels:
      app: external-keycloak
      class: spawner
      spawner: external-keycloak
    name: external-keycloak-spawner-rules
  rules: []
- apiVersion: authorization.openshift.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
      app: external-keycloak
      class: spawner
      spawner: external-keycloak
    name: external-keycloak-spawner-rules
  roleRef:
    name: external-keycloak-spawner-rules
  subjects:
  - kind: ServiceAccount
    name: external-keycloak-spawner
    namespace: {{ workshop_spawner_project_name }}
- apiVersion: authorization.openshift.io/v1
  kind: ClusterRole
  metadata:
    labels:
      app: external-keycloak
      class: spawner
      spawner: external-keycloak
    name: external-keycloak-session-rules
  rules: []
- apiVersion: authorization.openshift.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
      app: external-keycloak
      class: spawner
      spawner: external-keycloak
    name: external-keycloak-session-rules
  roleRef:
    name: external-keycloak-session-rules
  subjects:
  - kind: ServiceAccount
    name: external-keycloak-spawner
    namespace: {{ workshop_spawner_project_name }}
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: external-keycloak
      class: spawner
      spawner: external-keycloak
    name: external-keycloak-spawner
    namespace: {{ workshop_spawner_project_name }}
  spec:
    tags:
    - from:
        kind: DockerImage
        name: {{ workshop_spawner_image }}
      name: latest
- apiVersion: v1
  data:
    jupyterhub_config.py: ""
    jupyterhub_config.sh: ""
  kind: ConfigMap
  metadata:
    labels:
      app: external-keycloak
      class: spawner
      spawner: external-keycloak
    name: external-keycloak-spawner-configs
    namespace: {{ workshop_spawner_project_name }}
- apiVersion: v1
  data:
    extra_resources.json: ""
  kind: ConfigMap
  metadata:
    labels:
      app: external-keycloak
      class: spawner
      spawner: external-keycloak
    name: external-keycloak-session-resources
    namespace: {{ workshop_spawner_project_name }}
- apiVersion: v1
  data:
    gateway.sh: ""
    terminal.sh: ""
    workshop.sh: ""
  kind: ConfigMap
  metadata:
    labels:
      app: external-keycloak
      class: spawner
      spawner: external-keycloak
    name: external-keycloak-session-envvars
    namespace: {{ workshop_spawner_project_name }}
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: external-keycloak
      class: spawner
      spawner: external-keycloak
    name: external-keycloak-spawner
    namespace: {{ workshop_spawner_project_name }}
  spec:
    replicas: 1
    selector:
      deploymentconfig: external-keycloak-spawner
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: external-keycloak
          class: spawner
          deploymentconfig: external-keycloak-spawner
          spawner: external-keycloak
      spec:
        containers:
        - env:
          - name: CONFIGURATION_TYPE
            value: external-keycloak
          - name: APPLICATION_NAME
            value: external-keycloak
          - name: WORKSHOP_NAME
            value: external-keycloak
          - name: HOMEROOM_NAME
            value: ""
          - name: WORKSHOP_IMAGE
            value: {{ workshop_dashboard_image }}
          - name: WORKSHOP_MEMORY
            value: 512Mi
          - name: CONSOLE_MEMORY
            value: 128Mi
          - name: CONSOLE_BRANDING
            value: openshift
          - name: CONSOLE_IMAGE
            value: quay.io/openshift/origin-console:{{ openshift_version|default("4.4") }}
          - name: VOLUME_SIZE
            value: ""
          - name: ADMIN_USERS
            value: ""
          - name: IDLE_TIMEOUT
            value: "7200"
          - name: RESOURCE_BUDGET
            value: default
          - name: DOWNLOAD_URL
            value: ""
          - name: WORKSHOP_FILE
            value: ""
          - name: OC_VERSION
            value: ""
          - name: ODO_VERSION
            value: ""
          - name: KUBECTL_VERSION
            value: ""
          - name: EXPOSED_PORTS
            value: ""
          - name: HOMEROOM_LINK
            value: ""
          - name: OAUTH_CLIENT_SECRET
            value: 8e135d2ae856dadee4eb02ee005e4e78
          - name: KEYCLOAK_AUTH_URL
            value: {{ keycloak_url }}/auth
          - name: KEYCLOAK_REALM
            value: codeready
          - name: KEYCLOAK_CLIENT_ID
            value: codeready-public
          - name: CUSTOM_TAB_1
            value: "CodeReady Workspaces=https://codeready-{{ crw_project_name }}.{{ cluster_router }}"
          - name: API_SERVER
            value: https://api.{{ cluster_name }}.{{ openshift_base_domain }}:6443
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /hub/api
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: spawner
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /hub/api
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 768Mi
            requests:
              memory: 768Mi
          volumeMounts:
          - mountPath: /opt/app-root/data
            name: data
          - mountPath: /opt/app-root/configs
            name: configs
          - mountPath: /opt/app-root/resources
            name: resources
        serviceAccountName: external-keycloak-spawner
        volumes:
        - name: data
          persistentVolumeClaim:
            claimName: external-keycloak-spawner-data
        - configMap:
            defaultMode: 420
            name: external-keycloak-spawner-configs
          name: configs
        - configMap:
            defaultMode: 420
            name: external-keycloak-session-resources
          name: resources
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - spawner
        from:
          kind: ImageStreamTag
          name: external-keycloak-spawner:latest
      type: ImageChange
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: external-keycloak
      class: spawner
      spawner: external-keycloak
    name: external-keycloak-spawner-data
    namespace: {{ workshop_spawner_project_name }}
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: external-keycloak
      class: spawner
      spawner: external-keycloak
    name: external-keycloak-spawner
    namespace: {{ workshop_spawner_project_name }}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: 8081-tcp
      port: 8081
      protocol: TCP
      targetPort: 8081
    selector:
      deploymentconfig: external-keycloak-spawner
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      homeroom/description: ""
      homeroom/group: ""
      homeroom/title: ""
      kubernetes.io/tls-acme: "false"
    labels:
      app: external-keycloak
      class: spawner
      spawner: external-keycloak
    name: external-keycloak-spawner
    namespace: {{ workshop_spawner_project_name }}
  spec:
    host: dashboard.{{ cluster_router }}
    port:
      targetPort: 8080-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: external-keycloak-spawner
      weight: 100
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: external-keycloak
      class: spawner
      spawner: external-keycloak
    name: external-keycloak-session
    namespace: {{ workshop_spawner_project_name }}
  spec:
    lookupPolicy:
      local: true
    tags:
    - from:
        kind: DockerImage
        name: {{ workshop_dashboard_image }}
      name: latest
kind: List
metadata: {}
