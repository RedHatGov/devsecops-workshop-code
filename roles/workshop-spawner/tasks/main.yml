---
- name: Ensure namespace exists
  k8s:
    kubeconfig: '{{ kubeconfig }}'
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: '{{ workshop_spawner_project_name }}'
        annotations:
          openshift.io/display-name: '{{ workshop_spawner_project_display }}'
      spec: {}

- name: Wait for KeyCloak to respond to requests
  uri:
    url: '{{ keycloak_url }}'
    return_content: yes
    validate_certs: no
  register: keycloak_endpoint
  until: keycloak_endpoint.status == 200
  retries: 10
  delay: 30

- name: Get Che Identity Secret
  k8s_info:
    kubeconfig: '{{ kubeconfig }}'
    api_version: v1
    kind: Secret
    name: che-identity-secret
    namespace: "{{ crw_project_name }}"
  register: che_identity_secret

- set_fact:
    sso_admin_password: "{{ che_identity_secret | json_query('resources[0].data.password') | b64decode }}"
    sso_admin_user: "admin"

- name: Get Keycloak admin token
  uri:
    url: "{{ keycloak_url }}/auth/realms/master/protocol/openid-connect/token"
    method: POST
    headers:
      Content-Type: application/x-www-form-urlencoded
    body: "username={{ sso_admin_user }}&password={{ sso_admin_password }}&grant_type=password&client_id=admin-cli"
    status_code: 200
    validate_certs: no
  register: admin_token_result

- set_fact:
    admin_token: "{{ admin_token_result | json_query('json.access_token') }}"

- name: Get codeready-public client
  uri:
    url: "{{ keycloak_url }}/auth/admin/realms/codeready/clients/codeready-public"
    method: GET
    return_content: yes
    body_format: json
    headers:
      Authorization: Bearer {{ admin_token }}
    status_code: 200,404
    validate_certs: no
  register: result

- set_fact:
    redirect_uris: "{{ result.content | from_json | json_query('redirectUris') }}"

- name: Add spawner_redirect_uri to list if missing
  set_fact:
    client_representation:
      redirectUris: "{{ redirect_uris + [ spawner_redirect_uri ] }}"
      clientId: codeready-public
      serviceAccountsEnabled: false
  when: spawner_redirect_uri not in redirect_uris

- name: Update codeready-public client if necessary
  uri:
    url: "{{ keycloak_url }}/auth/admin/realms/codeready/clients/codeready-public"
    method: PUT
    body: "{{ client_representation }}"
    body_format: json
    headers:
      Authorization: Bearer {{ admin_token }}
    status_code: 204
    validate_certs: no
  register: result
  when: spawner_redirect_uri not in redirect_uris

- name: Deploy workshop spawner
  k8s:
    kubeconfig: '{{ kubeconfig }}'
    definition: '{{ lookup("template", "workshop-spawner.yml.j2")|from_yaml }}'

- name: Wait for the Spawner to respond to requests
  uri:
    url: 'https://dashboard.{{ cluster_router }}/'
    return_content: yes
    validate_certs: no
  register: dashboard_endpoint
  until: dashboard_endpoint.status == 200
  retries: 20
  delay: 5
