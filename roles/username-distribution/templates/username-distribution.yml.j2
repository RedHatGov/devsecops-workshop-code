---
kind: List
apiVersion: v1
metadata: {}
items:
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: username-distribution
      app.kubernetes.io/component: username-distribution
      app.kubernetes.io/instance: username-distribution
      app.kubernetes.io/part-of: username-distribution-app
    name: username-distribution
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: username-distribution
      deploymentconfig: username-distribution
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        labels:
          app: username-distribution
          deploymentconfig: username-distribution
      spec:
        containers:
        - env:
          - name: LAB_TITLE
            value: DevSecOps Workshop - Secure Software Factory
          - name: LAB_USER_COUNT
            value: '{{ number_of_users }}'
          - name: LAB_USER_ACCESS_TOKEN
            value: {{ user_access_token }}
          - name: LAB_USER_PASS
            value: openshift
          - name: LAB_USER_PREFIX
            value: user
          - name: LAB_MODULE_URLS
            value: https://dashboard.{{ cluster_router }};Workshop Dashboard
          - name: LAB_USER_PAD_ZERO
            value: 'false'
          - name: LAB_ADMIN_PASS
            valueFrom:
              secretKeyRef:
                name: username-distribution-secret
                key: password
          image: quay.io/redhatgov/username-distribution:latest
          imagePullPolicy: IfNotPresent
          name: username-distribution
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: "/dev/termination-log"
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - username-distribution
        from:
          kind: ImageStreamTag
          name: username-distribution:latest
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: username-distribution
      app.kubernetes.io/component: username-distribution
      app.kubernetes.io/instance: username-distribution
      app.kubernetes.io/name: ''
      app.kubernetes.io/part-of: username-distribution-app
      app.openshift.io/runtime: ''
      app.openshift.io/runtime-version: latest
    name: username-distribution
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: username-distribution
      deploymentconfig: username-distribution
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: username-distribution
      app.kubernetes.io/component: username-distribution
      app.kubernetes.io/instance: username-distribution
      app.kubernetes.io/name: ''
      app.kubernetes.io/part-of: username-distribution-app
      app.openshift.io/runtime: ''
      app.openshift.io/runtime-version: latest
    name: username-distribution
  spec:
    port:
      targetPort: 8080-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: username-distribution
      weight: 100
    wildcardPolicy: None
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: username-distribution
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
      from:
        kind: DockerImage
        name: quay.io/akrohg/username-distribution:latest
      generation: 1
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
- apiVersion: v1
  kind: Secret
  metadata:
    name: username-distribution-secret
  type: Opaque
  data:
    username: "{{ 'admin' | b64encode }}"
    password: "{{ username_distribution_admin_password | b64encode }}"
