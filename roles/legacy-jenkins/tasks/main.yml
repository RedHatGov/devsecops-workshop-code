---
- name: Ensure namespace exists
  k8s:
    kubeconfig: '{{ kubeconfig }}'
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: '{{ jenkins_project_name }}'
        annotations:
          openshift.io/display-name: '{{ jenkins_project_display }}'
      spec: {}

# https://docs.openshift.com/container-platform/4.5/openshift_images/using_images/images-other-jenkins.html#images-other-jenkins-env-var_images-other-jenkins
# looks like the env var OVERRIDE_PV_PLUGINS_WITH_IMAGE_PLUGINS would mean that we don't have to worry as long as the default plugins are sufficient

- name: Ensure Jenkins controller ImageStream exists in disconnected cluster
  when: not connected_cluster
  block:

  - name: List Jenkins repository image tags
    uri:
      url: 'https://{{ rhedsord_registry }}/v2/{{ jenkins_repository_name }}/tags/list'
      method: GET
      user: '{{ rhedsord_registry_username }}'
      password: '{{ rhedsord_registry_password }}'
      force_basic_auth: yes
      status_code: 200
      validate_certs: false
    register: openshift_release_dev_image_tags

  - set_fact:
      jenkins_image_path: '{{ rhedsord_registry }}/{{ jenkins_repository_name }}:{{ item }}'
    loop: '{{ openshift_release_dev_image_tags.json.tags }}'
    when: item is match('.*jenkins$')

  - name: Create Jenkins ImageStream
    k8s:
      kubeconfig: '{{ kubeconfig }}'
      namespace: openshift
      definition: '{{ lookup("template", "imagestream.yml.j2")|from_yaml }}'

- name: Create a Jenkins instance
  k8s:
    kubeconfig: '{{ kubeconfig }}'
    namespace: '{{ jenkins_project_name }}'
    definition: '{{ lookup("template", "jenkins.yml.j2")|from_yaml }}'

- name: Delete RoleBinding for user accounts if they exist
  k8s:
    kubeconfig: '{{ kubeconfig }}'
    namespace: '{{ jenkins_project_name }}'
    definition: '{{ lookup("template", "jenkins_user_role_binding.yml.j2")|from_yaml }}'
    state: absent

- name: Add RoleBinding for user accounts
  k8s:
    kubeconfig: '{{ kubeconfig }}'
    namespace: '{{ jenkins_project_name }}'
    definition: '{{ lookup("template", "jenkins_user_role_binding.yml.j2")|from_yaml }}'