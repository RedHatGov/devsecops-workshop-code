---
- name: Ensure Istio control plane namespace exists
  k8s:
    kubeconfig: '{{ kubeconfig }}'
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: '{{ sm_namespace }}'
        annotations:
          openshift.io/display-name: '{{ sm_ns_display|default(omit) }}'
      spec: {}

- name: Subscribe to Service Mesh and prerequisites
  k8s:
    kubeconfig: '{{ kubeconfig }}'
    definition: '{{ lookup("template", "subscriptions.yml.j2")|from_yaml }}'

- name: Deploy Service Mesh Control PLane
  k8s:
    kubeconfig: '{{ kubeconfig }}'
    definition: '{{ lookup("template", "control_plane.yml.j2")|from_yaml }}'
  register: control_plane_deployment
  until: not control_plane_deployment.failed
  retries: 5
  delay: 10

- name: Retrieve current Service Mesh ConfigMap
  k8s_info:
    kubeconfig: '{{ kubeconfig }}'
    api_version: v1
    namespace: '{{ sm_namespace }}'
    kind: ConfigMap
    name: istio
  register: istio_config_map
  until: istio_config_map.resources|length > 0
  retries: 10
  delay: 30

- name: Enforce policy by default
  k8s:
    kubeconfig: '{{ kubeconfig }}'
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        namespace: istio-system
        name: istio
      data:
        mesh: |
          {% for line in (istio_config_map|json_query("resources[0].data.mesh")).split('\n') %}
          {% if line.startswith('disablePolicyChecks:') -%}
            disablePolicyChecks: false
          {% else -%}
            {{ line }}
          {% endif %}
          {% endfor %}
