---
- name: Create OCS MachineSets
  include_tasks: ocs_machines.yml

- name: Subscribe to OCS4
  k8s:
    kubeconfig: '{{ kubeconfig }}'
    definition: '{{ lookup("template", "ocs.yml.j2")|from_yaml }}'

- name: Wait for OCS nodes to come up from MachineSets
  k8s_info:
    kubeconfig: '{{ kubeconfig }}'
    kind: Node
  register: nodes
  until:
    - nodes|to_json|from_json|json_query(ocs_node_query)|length == 3
    - nodes|to_json|from_json|json_query(ocs_node_query)|json_query(nodes_ready_query) == ["True", "True", "True"]
  retries: 20
  delay: 30

- name: Create OCS-backed StorageCluster
  k8s:
    kubeconfig: '{{ kubeconfig }}'
    definition:
      apiVersion: ocs.openshift.io/v1
      kind: StorageCluster
      metadata:
        name: ocs-storagecluster
        namespace: openshift-storage
      spec:
        manageNodes: false
        storageDeviceSets:
          - count: 1
            dataPVCTemplate:
              spec:
                accessModes:
                - ReadWriteOnce
                resources:
                  requests:
                    storage: 512Gi
                storageClassName: gp2
                volumeMode: Block
            name: ocs-deviceset
            placement: {}
            portable: true
            replica: 3
            resources: {}

- name: Wait for OCS-backed StorageCluster to provide StorageClasses
  k8s_info:
    kubeconfig: '{{ kubeconfig }}'
    kind: StorageCluster
    namespace: openshift-storage
  register: storagecluster
  until: storagecluster|to_json|from_json|json_query(ocs_storage_class_query)
  retries: 20
  delay: 30

- include_tasks: change_default.yml
  when: change_default_storage_class

- include_tasks: update_registry.yml
  when: change_image_registry_storage
