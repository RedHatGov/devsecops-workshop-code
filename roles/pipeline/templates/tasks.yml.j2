- apiVersion: tekton.dev/v1alpha1
  kind: Task
  metadata:
    name: s2i-eap-7
    namespace: {{ username }}-cicd
  spec:
    inputs:
      params:
      - default: .
        description: The location of the path to run s2i from
        name: PATH_CONTEXT
        type: string
      - default: "true"
        description: Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)
        name: TLSVERIFY
        type: string
      - default: ""
        description: Additional Maven arguments
        name: MAVEN_ARGS_APPEND
        type: string
      - default: "false"
        description: Remove the Maven repository after the artifact is built
        name: MAVEN_CLEAR_REPO
        type: string
      - default: ""
        description: The base URL of a mirror used for retrieving artifacts
        name: MAVEN_MIRROR_URL
        type: string
      resources:
      - name: source
        type: git
    outputs:
      resources:
      - name: image
        type: image
    steps:
    - args:
      - |-
        echo "MAVEN_CLEAR_REPO=$(inputs.params.MAVEN_CLEAR_REPO)" > env-file

        [[ '$(inputs.params.MAVEN_ARGS_APPEND)' != "" ]] &&
          echo "MAVEN_ARGS_APPEND=$(inputs.params.MAVEN_ARGS_APPEND)" >> env-file

        [[ '$(inputs.params.MAVEN_MIRROR_URL)' != "" ]] &&
          echo "MAVEN_MIRROR_URL=$(inputs.params.MAVEN_MIRROR_URL)" >> env-file

        echo "Generated Env file"
        echo "------------------------------"
        cat env-file
        echo "------------------------------"
      command:
      - /bin/sh
      - -c
      image: quay.io/openshift-pipeline/s2i
      name: gen-env-file
      resources: {}
      volumeMounts:
      - mountPath: /env-params
        name: envparams
      workingDir: /env-params
    - command:
      - s2i
      - build
      - $(inputs.params.PATH_CONTEXT)
      # This could also use something like image-registry.openshift-image-registry.svc.cluster.local:5000/openshift/jboss-eap72-openshift:1.1
      # from the built in registry
      - registry.redhat.io/jboss-eap-7/eap72-openshift:1.2
      - --image-scripts-url
      - image:///usr/local/s2i
      - --as-dockerfile
      - /gen-source/Dockerfile.gen
      - --environment-file
      - /env-params/env-file
      image: quay.io/openshift-pipeline/s2i
      name: generate
      resources: {}
      volumeMounts:
      - mountPath: /gen-source
        name: gen-source
      - mountPath: /env-params
        name: envparams
      workingDir: /workspace/source
    - command:
      - buildah
      - bud
      - --tls-verify=$(inputs.params.TLSVERIFY)
      - --layers
      - -f
      - /gen-source/Dockerfile.gen
      - -t
      - $(outputs.resources.image.url)
      - .
      image: quay.io/buildah/stable
      name: build
      resources: {}
      securityContext:
        privileged: true
      volumeMounts:
      - mountPath: /var/lib/containers
        name: varlibcontainers
      - mountPath: /gen-source
        name: gen-source
      workingDir: /gen-source
    - command:
      - buildah
      - push
      - --tls-verify=$(inputs.params.TLSVERIFY)
      - $(outputs.resources.image.url)
      - docker://$(outputs.resources.image.url)
      image: quay.io/buildah/stable
      name: push
      resources: {}
      securityContext:
        privileged: true
      volumeMounts:
      - mountPath: /var/lib/containers
        name: varlibcontainers
    volumes:
    - emptyDir: {}
      name: varlibcontainers
    - emptyDir: {}
      name: gen-source
    - emptyDir: {}
      name: envparams

- apiVersion: tekton.dev/v1alpha1
  kind: Task
  metadata:
    name: maven-java8
    namespace: {{ username }}-cicd
  spec:
    inputs:
      params:
        - default:
            - package
          description: maven goals to run
          name: GOALS
          type: array
        - default: configuration/cicd-settings-nexus3.xml
          description: location of the settings file
          name: settings-path
          type: string
      resources:
        - name: source
          type: git
    steps:
      - args:
          - $(inputs.params.GOALS)
          - '-s$(inputs.resources.source.path)/$(inputs.params.settings-path)'
        command:
          - /usr/bin/mvn
        image: 'gcr.io/cloud-builders/mvn:3.5.0-jdk-8'
        name: mvn-goals
        resources: {}
    workspaces:
      - name: maven-repo

- apiVersion: tekton.dev/v1alpha1
  kind: Task
  metadata:
    name: build-jboss-app
    namespace: {{ username }}-cicd
  spec:
    inputs:
      params:
        - default: tasks
          description: The name of the app
          name: app_name
          type: string
        - default: {{ username }}-dev
          description: The name dev project
          name: dev_project
          type: string
      resources:
        - name: source
          type: git
    steps:
      - args:
          - >-
            echo "Creating new build config" 


            # This allows the new build to be created whether it exists or not

            oc new-build -o yaml --name=$(inputs.params.app_name)
            --image-stream=jboss-eap72-openshift:1.1  --binary=true -n
            $(inputs.params.dev_project) | oc apply -n
            $(inputs.params.dev_project) -f - 
        command:
          - /bin/sh
          - '-c'
        image: 'quay.io/openshift/origin-cli:latest'
        name: create-build-config
        resources: {}
      - args:
          - >-
            echo "Start the openshift build"  && 


            rm -rf $(inputs.resources.source.path)/oc-build && mkdir -p
            $(inputs.resources.source.path)/oc-build/deployments && 


            cp
            $(workspaces.maven-repo.path)/org/jboss/quickstarts/eap/jboss-tasks-rs/7.0.0-SNAPSHOT/jboss-tasks-rs-7.0.0-SNAPSHOT.war
            $(inputs.resources.source.path)/oc-build/deployments/ROOT.war && 


            oc start-build $(inputs.params.app_name)
            --from-dir=$(inputs.resources.source.path)/oc-build -n
            $(inputs.params.dev_project) --wait=true
        command:
          - /bin/sh
          - '-c'
        image: 'quay.io/openshift/origin-cli:latest'
        name: build-app-image
        resources: {}
      - args:
          - >-
            echo "Create new app from tasks image stream in
            $(inputs.params.dev_project) project"   &&

            oc new-app --image-stream=$(inputs.params.app_name):latest -n
            $(inputs.params.dev_project) --as-deployment-config=true -o yaml | oc
            apply -n $(inputs.params.dev_project)  -f - && 

            oc delete route $(inputs.params.app_name) -n
            $(inputs.params.dev_project) && oc expose svc
            $(inputs.params.app_name) -n $(inputs.params.dev_project)  && 

            echo "Setting manual triggers on deployment $(inputs.params.app_name)"
            && 

            oc set triggers dc/$(inputs.params.app_name) --manual=true -n
            $(inputs.params.dev_project) && 

            echo "Rolling out dc  dc/$(inputs.params.app_name)" &&  oc rollout
            latest dc/$(inputs.params.app_name) -n $(inputs.params.dev_project)
        command:
          - /bin/sh
          - '-c'
        image: 'quay.io/openshift/origin-cli:latest'
        name: deploy-app-from-image
        resources: {}
    workspaces:
      - name: maven-repo