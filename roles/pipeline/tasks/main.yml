---
- name: Create registry secrets for every user account for registry.redhat.io
  k8s:
    kubeconfig: '{{ kubeconfig }}'
    definition: '{{ lookup("template", "registry_secrets.yml.j2")|from_yaml }}'

- name: Create registry secrets for every user account in Quay
  k8s:
    kubeconfig: '{{ kubeconfig }}'
    definition: '{{ lookup("template", "quay_secrets.yml.j2")|from_yaml }}'
  register: quay_secrets
  when: deploy_quay|default(true)

# k8s_json_patch nor normal k8s modules are working here... oc CLI is
# note that this is NOT idempotent - if you run the pipeline role more than once
# it will add the secret more than once which will cause the pipeline
# runs to FAIL !
- name: Attach new secrets to pipeline service accounts
  shell: |
    export KUBECONFIG='{{ kubeconfig }}'
    oc='{{ oc_cli }}'
    admin_user='{{ workshop_admin.username }}'
    admin_password='{{ workshop_admin.password }}'
    if [ $($oc whoami) != "$admin_user" ]; then
        $oc login --insecure-skip-tls-verify=true -u "$admin_user" -p "$admin_password" || exit 1
    fi
    user={{ item[0] }}
    project={{ item[1] }}
    $oc patch sa/pipeline -n $user-$project --type=json -p='[
      {"op":"add",
       "path":"/secrets/-",
       "value":{"name":"'"$user-$project"'-quay-reg"}}]' || exit 2
  when:
    - quay_secrets is defined
    - quay_secrets.changed|bool
    - quay_secrets.result|json_query('results[*]|[?@.result.metadata.namespace == `' + item[0] + '-' + item[1] + '`].changed')|first|bool
  with_nested:
    - '{{ workshop_users|json_query("[].username") }}'
    - '{{ projects|json_query("[].name") }}'

- name: Set up access to registry.redhat.io
  include_tasks: registry_service_accounts.yml
  loop: '{{ workshop_users|json_query("[].username") }}'
  loop_control:
    loop_var: username  

- name: Create necessary pipeline tasks, and resources
  block:
  - name: Define the build task
    k8s:
      kubeconfig: '{{ kubeconfig }}'
      definition: '{{ lookup("template", "tasks.yml.j2")|from_yaml }}'
    loop: '{{ workshop_users|json_query("[].username") }}'
    loop_control:
      loop_var: username

  - name: Define pipeline resources
    k8s:
      kubeconfig: '{{ kubeconfig }}'
      definition: '{{ lookup("template", "resources.yml.j2")|from_yaml }}'
    loop: '{{ workshop_users|json_query("[].username") }}'
    loop_control:
      loop_var: username

  - name: Define pipeline
    k8s:
      kubeconfig: '{{ kubeconfig }}'
      definition: '{{ lookup("template", "pipeline_s2i.yml.j2")|from_yaml }}'
    loop: '{{ workshop_users|json_query("[].username") }}'
    loop_control:
      loop_var: username
