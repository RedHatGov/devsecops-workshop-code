---
- name: Ensure namespace exists
  k8s:
    kubeconfig: '{{ kubeconfig }}'
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: '{{ nexus_project_name }}'
        annotations:
          openshift.io/display-name: '{{ nexus_project_display }}'
      spec: {}

- name: Check anyuid scc for nexus service account
  k8s_info:
    kubeconfig: '{{ kubeconfig }}'
    api_version: security.openshift.io/v1
    kind: SecurityContextConstraints
    name: anyuid
  register: anyuid_scc

- name: Apply anyuid to service account for Nexus
  k8s_json_patch:
    kubeconfig: '{{ kubeconfig }}'
    api_version: security.openshift.io/v1
    kind: SecurityContextConstraints
    name: anyuid
    patch:
      - op: add
        path: /users/-
        value: system:serviceaccount:{{ nexus_project_name }}:nexus
  when: '"system:serviceaccount:" + nexus_project_name + ":nexus" not in anyuid_scc.resources[0].users'

- name: Subscribe to Nexus
  k8s:
    kubeconfig: '{{ kubeconfig }}'
    definition: '{{ lookup("template", "nexus.yml.j2")|from_yaml }}'

- name: Deploy Nexus via CR
  k8s:
    kubeconfig: '{{ kubeconfig }}'
    definition:
      apiVersion: apps.m88i.io/v1alpha1
      kind: Nexus
      metadata:
        name: nexus
        namespace: '{{ nexus_project_name }}'
      spec:
        networking:
          expose: true
          exposeAs: Route
        persistence:
          persistent: true
          volumeSize: 10Gi
        replicas: 1
        resources:
          limits:
            cpu: "4"
            memory: 4Gi
          requests:
            cpu: "1"
            memory: 4Gi
        useRedHatImage: true
  register: nexus_deployment
  until: not nexus_deployment.failed
  retries: 5
  delay: 10
