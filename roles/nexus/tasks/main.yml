---
- name: Ensure namespace exists
  k8s:
    kubeconfig: '{{ kubeconfig }}'
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: '{{ nexus_project_name }}'
        annotations:
          openshift.io/display-name: '{{ nexus_project_display }}'
      spec: {}

- name: Wait for nexus-operator package manifest to be available
  k8s_info:
    kubeconfig: '{{ kubeconfig }}'
    api_version: packages.operators.coreos.com/v1
    kind: PackageManifest
    namespace: openshift-marketplace
    name: nexus-operator
  register: nexus_package_manifest
  until: nexus_package_manifest.resources|length > 0 and (nexus_package_manifest.resources|first).status.catalogSource == "redhatgov-operators"
  retries: 5
  delay: 10

- name: Subscribe to Nexus
  k8s:
    kubeconfig: '{{ kubeconfig }}'
    definition: '{{ lookup("template", "nexus.yml.j2")|from_yaml }}'

- name: Deploy Nexus via CR
  k8s:
    kubeconfig: '{{ kubeconfig }}'
    namespace: '{{ nexus_project_name }}'
    definition:
      apiVersion: redhatgov.io/v1alpha1
      kind: Nexus
      metadata:
        name: nexus
      spec:
        persistent: true
        nexus:
          allowAnonymousAccess: true
          oauth:
            enabled: false
  register: nexus_deployment
  until: not nexus_deployment.failed
  retries: 5
  delay: 10

- name: Wait for Nexus to finish being created
  k8s_info:
    kubeconfig: '{{ kubeconfig }}'
    api_version: v1
    kind: Pod
    namespace: '{{ nexus_project_name }}'
    label_selectors:
      - app=nexus
  register: nexus_pod
  until: nexus_pod.resources|length > 0 and (nexus_pod.resources|first).status.phase == "Running"
  retries: 10
  delay: 30

- name: Wait for Nexus route to be created by the Operator
  k8s_info:
    kubeconfig: '{{ kubeconfig }}'
    api_version: route.openshift.io/v1
    kind: Route
    namespace: '{{ nexus_project_name }}'
    name: nexus
  register: nexus_route
  until: nexus_route.resources|length > 0
  retries: 10
  delay: 30

- name: Wait for Nexus route to begin answering requests
  uri:
    url: 'http://{{ nexus_route|json_query("resources[0].spec.host") }}/'
    return_content: yes
    validate_certs: no
  register: nexus_index
  until: '"DOCTYPE html" in nexus_index.content'
  retries: 10
  delay: 30

- name: Retrieve nexus admin credentials
  k8s_info:
    kubeconfig: '{{ kubeconfig }}'
    api_version: v1
    kind: Secret
    namespace: devsecops
    name: nexus-admin-credentials
  register: nexus_credentials
  until: nexus_credentials.resources|length > 0

- name: Set nexus admin password
  set_fact:
    nexus_admin_password: '{{ nexus_credentials | json_query("resources[0].data.password") | b64decode }}'

- name: Add deployment user to Nexus instance
  shell: >-
    devsecops-api nexus add-user
    http://{{ nexus_route|json_query("resources[0].spec.host") }}
    --login-username admin --login-password '{{ nexus_admin_password }}'
    --usernames 'deployment'
    --passwords 'deployment123'
  register: deployment_user
  # https://github.com/ansible/ansible/issues/27299
  # to_json|from_json| is a terrible hack but here we are
  changed_when: deployment_user.stdout_lines|to_json|from_json|json_query("[?ends_with(@, ` added`)]")|length > 0
  failed_when: deployment_user.stdout_lines|to_json|from_json|json_query("[?ends_with(@, ` failed`)]")|length > 0 or deployment_user.rc != 0

- name: Add users to Nexus instance
  shell: >-
    devsecops-api nexus add-user
    http://{{ nexus_route|json_query("resources[0].spec.host") }}
    --login-username admin --login-password '{{ nexus_admin_password }}'
    --usernames '{{ workshop_users|json_query("[].username")|join(",") }}'
    --passwords '{{ workshop_users|json_query("[].password")|join(",") }}'
  register: nexus_users
  # https://github.com/ansible/ansible/issues/27299
  # to_json|from_json| is a terrible hack but here we are
  changed_when: nexus_users.stdout_lines|to_json|from_json|json_query("[?ends_with(@, ` added`)]")|length > 0
  failed_when: nexus_users.stdout_lines|to_json|from_json|json_query("[?ends_with(@, ` failed`)]")|length > 0 or nexus_users.rc != 0

- name: Create a new repository named after every user
  shell: >-
    devsecops-api nexus add-repository
    http://{{ nexus_route|json_query("resources[0].spec.host") }}
    --login-username admin --login-password '{{ nexus_admin_password }}'
    --repository-names '{{ workshop_users|json_query("[].username")|join(",") }}'
  register: nexus_repos
  # https://github.com/ansible/ansible/issues/27299
  # to_json|from_json| is a terrible hack but here we are
  changed_when: nexus_repos.stdout_lines|to_json|from_json|json_query("[?ends_with(@, ` added`)]")|length > 0
  failed_when: nexus_repos.stdout_lines|to_json|from_json|json_query("[?ends_with(@, ` failed`)]")|length > 0 or nexus_repos.rc != 0

- name: Create a new proxy repository for redhat-ga
  shell: >-
    devsecops-api nexus add-proxy-repository
    http://{{ nexus_route|json_query("resources[0].spec.host") }}
    --login-username admin --login-password '{{ nexus_admin_password }}'
    --repository-name 'redhat-ga-proxy'
    --remote-repo-url 'https://maven.repository.redhat.com/ga/'
  register: redhat_ga_proxy
  # https://github.com/ansible/ansible/issues/27299
  # to_json|from_json| is a terrible hack but here we are
  changed_when: redhat_ga_proxy.stdout_lines|to_json|from_json|json_query("[?ends_with(@, ` added`)]")|length > 0
  failed_when: redhat_ga_proxy.stdout_lines|to_json|from_json|json_query("[?ends_with(@, ` failed`)]")|length > 0 or redhat_ga_proxy.rc != 0

- name: Update maven-public repo with redhat-ga proxy repo
  shell: >-
    devsecops-api nexus update-group-repo
    http://{{ nexus_route|json_query("resources[0].spec.host") }}
    --login-username admin --login-password '{{ nexus_admin_password }}'
    --group-repository-name 'maven-public'
    --member-repository-names 'maven-releases,maven-snapshots,maven-central,redhat-ga-proxy'
  register: maven_public_repo
  # https://github.com/ansible/ansible/issues/27299
  # to_json|from_json| is a terrible hack but here we are
  changed_when: maven_public_repo.stdout_lines|to_json|from_json|json_query("[?ends_with(@, ` added`)]")|length > 0
  failed_when: maven_public_repo.stdout_lines|to_json|from_json|json_query("[?ends_with(@, ` failed`)]")|length > 0 or maven_public_repo.rc != 0
