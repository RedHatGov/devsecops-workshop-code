---
- name: Ensure namespace exists
  k8s:
    kubeconfig: '{{ kubeconfig }}'
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: '{{ nexus_project_name }}'
        annotations:
          openshift.io/display-name: '{{ nexus_project_display }}'
      spec: {}

- name: Subscribe to Nexus
  k8s:
    kubeconfig: '{{ kubeconfig }}'
    definition: '{{ lookup("template", "nexus.yml.j2")|from_yaml }}'

- name: Deploy Nexus via CR
  k8s:
    kubeconfig: '{{ kubeconfig }}'
    definition:
      apiVersion: apps.m88i.io/v1alpha1
      kind: Nexus
      metadata:
        name: nexus
        namespace: '{{ nexus_project_name }}'
      spec:
        networking:
          expose: true
          exposeAs: Route
        persistence:
          persistent: true
          volumeSize: 10Gi
        replicas: 1
        resources:
          limits:
            cpu: "4"
            memory: 4Gi
          requests:
            cpu: "1"
            memory: 4Gi
        useRedHatImage: true
  register: nexus_deployment
  until: not nexus_deployment.failed
  retries: 5
  delay: 10

- name: Check anyuid scc for nexus service account
  k8s_info:
    kubeconfig: '{{ kubeconfig }}'
    api_version: security.openshift.io/v1
    kind: SecurityContextConstraints
    name: anyuid
  register: anyuid_scc

- name: Apply anyuid to service account for Nexus
  k8s_json_patch:
    kubeconfig: '{{ kubeconfig }}'
    api_version: security.openshift.io/v1
    kind: SecurityContextConstraints
    name: anyuid
    patch:
      - op: add
        path: /users/-
        value: system:serviceaccount:{{ nexus_project_name }}:nexus
  when: '"system:serviceaccount:" + nexus_project_name + ":nexus" not in anyuid_scc.resources[0].users'

- name: Wait for Nexus route to be created by the Operator
  k8s_info:
    kubeconfig: '{{ kubeconfig }}'
    api_version: route.openshift.io/v1
    kind: Route
    namespace: '{{ nexus_project_name }}'
    name: nexus
  register: nexus_route
  until: nexus_route.resources|length > 0
  retries: 10
  delay: 30

- name: Wait for Nexus route to begin answering requests
  uri:
    url: 'http://{{ nexus_route|json_query("resources[0].spec.host") }}/'
    return_content: yes
    validate_certs: no
  register: nexus_index
  until: '"DOCTYPE html" in nexus_index.content'
  retries: 10
  delay: 30

- name: Retrieve admin password for Nexus
  shell: |
    export KUBECONFIG='{{ kubeconfig }}'
    oc='{{ oc_cli }}'
    admin_user='{{ workshop_admin.username }}'
    admin_password='{{ workshop_admin.password }}'
    if [ $($oc whoami) != "$admin_user" ]; then
        $oc login --insecure-skip-tls-verify=true -u "$admin_user" -p "$admin_password" &>/dev/null || exit 1
    fi

    counter=0
    pod=$($oc get pods -n {{ nexus_project_name }} -l app=nexus -o jsonpath='{.items[0].metadata.name}')
    while ! $oc exec $pod -n {{ nexus_project_name }} -- [ -f /nexus-data/admin.password ] &>/dev/null; do
        sleep 1
        ((counter++))
        [ $counter -gt 300 ] && exit 1
    done
    $oc exec $pod -n {{ nexus_project_name }} -- cat /nexus-data/admin.password || exit 1
  register: nexus_password
  changed_when: false

- name: Add users to Nexus instance
  shell: >-
    devsecops-api nexus add-user
    http://{{ nexus_route|json_query("resources[0].spec.host") }}
    --login-username admin --login-password '{{ nexus_password.stdout }}'
    --usernames '{{ workshop_users|json_query("[].username")|join(",") }}'
    --passwords '{{ workshop_users|json_query("[].password")|join(",") }}'
  register: nexus_users
  # https://github.com/ansible/ansible/issues/27299
  # to_json|from_json| is a terrible hack but here we are
  changed_when: nexus_users.stdout_lines|to_json|from_json|json_query("[?ends_with(@, ` added`)]")|length > 0
  failed_when: nexus_users.stdout_lines|to_json|from_json|json_query("[?ends_with(@, ` failed`)]")|length > 0 or nexus_users.rc != 0

- name: Create a new repository named after every user
  shell: >-
    devsecops-api nexus add-repository
    http://{{ nexus_route|json_query("resources[0].spec.host") }}
    --login-username admin --login-password '{{ nexus_password.stdout }}'
    --repository-names '{{ workshop_users|json_query("[].username")|join(",") }}'
  register: nexus_repos
  # https://github.com/ansible/ansible/issues/27299
  # to_json|from_json| is a terrible hack but here we are
  changed_when: nexus_repos.stdout_lines|to_json|from_json|json_query("[?ends_with(@, ` added`)]")|length > 0
  failed_when: nexus_repos.stdout_lines|to_json|from_json|json_query("[?ends_with(@, ` failed`)]")|length > 0 or nexus_repos.rc != 0
