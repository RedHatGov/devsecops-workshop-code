---
## Create test client

- name: Create Test SSO Client
  k8s:
    kubeconfig: '{{ kubeconfig }}'
    definition: '{{ lookup("template", "../templates/rhsso-sonar4-client.yml.j2")|from_yaml }}'

- name: Configure SonarQube Settings for RHSSO
  block:
  - name: Create users (and update admin password) in SonarQube
    shell: >-
      devsecops-api sonarqube update-setting
      https://sonarqube-devsecops.apps.{{ subdomain }}
      --login-username admin --login-password admin
      --new-login-password '{{ sonarqube_password }}'
      --setting-name '{{ item.name }}'
      --setting-value '{{ item.value }}'
    # register: sonarqube_users
    # changed_when: sonarqube_users.stdout_lines|to_json|from_json|json_query("[?ends_with(@, ` added`)]")|length > 0
    # failed_when: sonarqube_users.stdout_lines|to_json|from_json|json_query("[?ends_with(@, ` failed`)]")|length > 0 or sonarqube_users.rc != 0
    # until: not sonarqube_users.failed
    # retries: 3
    # delay: 10
    loop:
      - { name: 'sonar.core.serverBaseURL', value: 'https://sonarqube-devsecops.apps.{{ subdomain }}' }
      - { name: 'sonar.auth.saml.enabled', value: 'true' }
      - { name: 'sonar.auth.saml.applicationId', value: 'sonarqube' }
      - { name: 'sonar.auth.saml.providerName', value: 'RH SSO' }
      - { name: 'sonar.auth.saml.providerId', value: 'https://keycloak-rhsso.apps.{{ subdomain }}/auth/realms/{{ rhsso_realm_name }}' }
      - { name: 'sonar.auth.saml.loginUrl', value: 'https://keycloak-rhsso.apps.{{ subdomain }}/auth/realms/{{ rhsso_realm_name }}/protocol/saml' }
      - { name: 'sonar.auth.saml.certificate.secured', value: '{{ rhsso_saml_cert_value }}' }
      - { name: 'sonar.auth.saml.user.login', value: 'login' }
      - { name: 'sonar.auth.saml.user.name', value: 'name' }
      - { name: 'sonar.auth.saml.group.name', value: 'groups' }
