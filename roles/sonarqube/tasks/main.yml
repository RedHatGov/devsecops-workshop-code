---
- name: Ensure namespace exists
  k8s:
    kubeconfig: '{{ kubeconfig }}'
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: '{{ sonarqube_project_name }}'
        annotations:
          openshift.io/display-name: '{{ sonarqube_project_display }}'
      spec: {}

- name: Deploy resources for SonarQube Operator
  k8s:
    kubeconfig: '{{ kubeconfig }}'
    namespace: '{{ resource.namespace|default(omit) }}'
    definition: '{{ lookup("url", resource.url, split_lines=False)|from_yaml|regex_replace("REPLACE_ME", sonarqube_project_name) }}'
  loop:
    - name: crd
      url: https://raw.githubusercontent.com/{{ github_project }}/sonarqube-operator/master/deploy/crds/gpte_v1alpha1_gsonarqube_crd.yaml
    - name: cluster_role
      url: https://raw.githubusercontent.com/{{ github_project }}/sonarqube-operator/master/deploy/cluster_role.yaml
    - name: service_account
      url: https://raw.githubusercontent.com/{{ github_project }}/sonarqube-operator/master/deploy/service_account.yaml
      namespace: '{{ sonarqube_project_name }}'
    - name: cluster_role_binding
      url: https://raw.githubusercontent.com/{{ github_project }}/sonarqube-operator/master/deploy/cluster_role_binding.yaml
      namespace: '{{ sonarqube_project_name }}'
    - name: operator
      url: https://raw.githubusercontent.com/{{ github_project }}/sonarqube-operator/master/deploy/operator.yaml
      namespace: '{{ sonarqube_project_name }}'
  loop_control:
    loop_var: resource
    label: '{{ resource.name }}'

- name: Create SonarQube from a CR
  k8s:
    kubeconfig: '{{ kubeconfig }}'
    namespace: '{{ sonarqube_project_name }}'
    definition:
      apiVersion: gpte.opentlc.com/v1alpha1
      kind: Sonarqube
      metadata:
        name: sonarqube
      spec:
        postgresqlVolumeSize: 4Gi
        sonarqubeVolumeSize: 4Gi
        sonarqubeServiceName: sonarqube
        sonarqubeSsl: true
  register: sq_deployment
  until: not sq_deployment.failed
  retries: 5
  delay: 10

- name: Wait for SonarQube route to be created by the Operator
  k8s_info:
    kubeconfig: '{{ kubeconfig }}'
    api_version: route.openshift.io/v1
    kind: Route
    namespace: '{{ sonarqube_project_name }}'
    name: sonarqube
  register: sonarqube_route
  until: sonarqube_route.resources|length > 0
  retries: 10
  delay: 30

- name: Wait for SonarQube route to begin answering requests
  uri:
    url: 'https://{{ sonarqube_route|json_query("resources[0].spec.host") }}/'
    return_content: yes
    validate_certs: no
  register: sonarqube_index
  until: '"doctype html" in sonarqube_index.content'
  retries: 10
  delay: 30

- name: Create users (and update admin password) in SonarQube
  shell: >-
    devsecops-api sonarqube add-user
    https://{{ sonarqube_route|json_query("resources[0].spec.host") }}
    --login-username admin --login-password admin
    --new-login-password '{{ sonarqube_password }}'
    --usernames '{{ workshop_users|json_query("[].username")|join(",") }}'
    --passwords '{{ workshop_users|json_query("[].password")|join(",") }}'
  register: sonarqube_users
  # https://github.com/ansible/ansible/issues/27299
  # to_json|from_json| is a terrible hack but here we are
  changed_when: sonarqube_users.stdout_lines|to_json|from_json|json_query("[?ends_with(@, ` added`)]")|length > 0
  failed_when: sonarqube_users.stdout_lines|to_json|from_json|json_query("[?ends_with(@, ` failed`)]")|length > 0 or sonarqube_users.rc != 0
