- name: Ensure namespace exists
  k8s:
    kubeconfig: '{{ kubeconfig }}'
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: '{{ rocketchat_project_name }}'
        annotations:
          openshift.io/display-name: '{{ rocketchat_project_display }}'
      spec: {}

- name: Fetch mongodb secret from cluster
  set_fact:
    secret_data: "{{ lookup('k8s', kind='Secret', kubeconfig=kubeconfig, namespace=rocketchat_project_name, resource_name='mongodb-secret') }}"

- name: Set mongodb credential facts from secret
  set_fact:
    mongodb_user: "{{ secret_data.data.username | b64decode }}"
    mongodb_password: "{{ secret_data.data.password | b64decode }}"
    mongodb_admin_password: "{{ secret_data.data.admin_password | b64decode }}"
    mongodb_keyfile_value: "{{ secret_data.data.keyfile | b64decode }}"
  when:
    - secret_data != []

- name: Create secret if missing
  block:
  - name: generate mongodb credential facts
    set_fact:
      mongodb_user: user{{ lookup('password', '/dev/null length=3 chars=digits') }}
      mongodb_password: "{{ lookup('password', '/dev/null length=16 chars=ascii_letters,digits') }}"
      mongodb_admin_password: "{{ lookup('password', '/dev/null length=16 chars=ascii_letters,digits') + '' }}"
      mongodb_keyfile_value: "{{ lookup('password', '/dev/null length=756') | b64encode }}"
  - name: create secret
    k8s:
      kubeconfig: '{{ kubeconfig }}'
      namespace: '{{ rocketchat_project_name }}'
      definition: "{{ lookup('template', 'mongodb-secret.yml.j2') }}"
  when:
  - secret_data == []

- name: Create MongoDB Deployment
  k8s:
    kubeconfig: '{{ kubeconfig }}'
    namespace: '{{ rocketchat_project_name }}'
    definition: "{{ lookup('template', 'mongodb.yml.j2')|from_yaml }}"

- name: Wait for MongoDB to finish being created
  k8s_info:
    kubeconfig: '{{ kubeconfig }}'
    api_version: v1
    kind: Pod
    namespace: '{{ rocketchat_project_name }}'
    label_selectors:
      - service=rocketchat-mongodb
  register: mongodb_pod
  until: mongodb_pod.resources|length > 0 and (mongodb_pod.resources|first).status.phase == "Running"
  retries: 10
  delay: 30

- name: Create Rocket.Chat Deployment
  k8s:
    kubeconfig: '{{ kubeconfig }}'
    namespace: '{{ rocketchat_project_name }}'
    definition: "{{ lookup('template', 'rocketchat.yml.j2')|from_yaml }}"

- name: Wait for Rocket.Chat to respond to requests
  uri:
    url: '{{ rocketchat_url }}'
    return_content: yes
    validate_certs: no
  register: rocketchat_endpoint
  until: rocketchat_endpoint.status == 200
  retries: 10
  delay: 30

- name: Configure Server
  include_tasks: configure_server.yml
