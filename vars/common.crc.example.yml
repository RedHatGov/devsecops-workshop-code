---
# This tells the playbooks to not try to include default-named vars files
common_included: yes


################################################################################
# NOTE: IF A VARIABLE IS COMMENTED, IT LIKELY DEFAULTS TO THE OPPOSITE
################################################################################
letsencrypt: no     # You can't

################################################################################
# DO NOT CHANGE OR COMMENT THESE FOR ANY REASON - they're used heavily
#   throughout all the various roles
cluster_name: crc
openshift_base_domain: testing
_tmp_parent: '{{ "/".join([ playbook_dir, "../tmp" ])|realpath }}'
full_cluster_name: '{{ ".".join([ cluster_name, openshift_base_domain ]) }}'
cluster_router: 'apps-crc.testing'
tmp_dir: '{{ "/".join([ _tmp_parent, full_cluster_name ]) }}'
################################################################################

# The path to the kubeconfig file for the cluster you're using for the workshop.
#   NOTE: Do not use ~ or other shell-expandable variables
# If you use run-container.sh, it will change this :)
kubeconfig: '{{ ansible_env["HOME"] }}/.crc/machines/crc/kubeconfig'

# The path to your 'oc' client
# If you use run-container.sh, it will change this :)
oc_cli: '{{ ansible_env["HOME"] }}/.crc/bin/oc/oc'

################################################################################
# The remaining variables are to customize your deployment configuration beyond
#   what is required for the workshop to function. You should read through and
#   understand them, but they aren't necessary to minimally deploy.
################################################################################

# A list of manually created users:
manual_users:
  - username: openshift-admin
    password: RedHatAdmin1
    admin: yes

# A specially designated user for administering workshop content
workshop_admin:
  username: workshop-admin
  password: RedHatAdmin1
  admin: yes

# The number of users created, as a string
number_of_users: "3"

# Generate a sequence of users
sequence_users: |
  {%- for username in lookup("sequence", "1-" + number_of_users + ":user%0i", wantlist=True) %}
    - username: {{ username }}
      password: openshift
  {% endfor -%}

# The users to create in OpenShift
openshift_users: '{{ manual_users + [workshop_admin] + sequence_users|from_yaml }}'
# The users to create workshop projects/integrations for
workshop_users: '{{ [workshop_admin] + sequence_users|from_yaml }}'
